apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "rootpassword"
        ports:
        - containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
############
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: php-app
  template:
    metadata:
      labels:
        app: php-app
    spec:
      containers:
      - name: php-app
        image: php:7.4-apache
        ports:
        - containerPort: 80
        env:
        - name: DB_HOST
          value: "mysql-service"
        - name: DB_USER
          value: "root"
        - name: DB_PASSWORD
          value: "rootpassword"
---
apiVersion: v1
kind: Service
metadata:
  name: php-service
spec:
  selector:
    app: php-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80

----

apiVersion: apps/v1
kind: Deployment
metadata:
  name: index-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: index-service
  template:
    metadata:
      labels:
        app: index-service
    spec:
      containers:
        - name: index-service
          image: <your_dockerhub_username>/index-service:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: index-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: index-service

-----
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-service
  template:
    metadata:
      labels:
        app: nginx-service
    spec:
      containers:
        - name: nginx-service
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: nginx-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen 80;

        location / {
            proxy_pass http://index-service:80;
        }

        location /signup {
            proxy_pass http://signup-service:80;
        }

        location /signin {
            proxy_pass http://signin-service:80;
        }

        location /user_home {
            proxy_pass http://userhome-service:80;
        }
    }
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-fpm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php-fpm
  template:
    metadata:
      labels:
        app: php-fpm
    spec:
      containers:
      - name: php-fpm
        image: <your-dockerhub-username>/php-fpm:latest # Replace with your PHP-FPM image
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: php-volume
          mountPath: /var/www/html
      volumes:
      - name: php-volume
        hostPath:
          path: /path/to/your/php/files # Replace with your local path to PHP files

---
apiVersion: v1
kind: Service
metadata:
  name: php-fpm
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: php-fpm

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: <your-dockerhub-username>/nginx:latest # Replace with your Nginx image
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-volume

---

